name: Deep Learning for Anomaly Detection
description: Applying deep learning models on the task of anomaly detection
author: Cloudera Inc.
specification_version: 1.0
prototype_version: 2.0
date: "2022-03-29"

runtimes:
  - editor: Workbench
    kernel: Python 3.9
    edition: Standard

tasks:
  - type: create_job
    name: Install dependencies
    entity_label: install_deps
    script: cml/install_deps.py
    arguments: None
    cpu: 2
    memory: 8
    short_summary: Create job to install project dependencies.
    environment:
      TASK_TYPE: CREATE/RUN_JOB

  - type: run_job
    entity_label: install_deps
    short_summary: Running install dependencies job.
    long_summary: >-
      Running the job to install dependencies.  Note that this requires at least 2GB of memory

  - type: create_job
    name: Train Model
    entity_label: train_model
    script: train.py
    arguments: None
    short_summary: Job to train and export model.
    long_summary: Job to train and export model. Note that this requires at least 2GB of memory.
    cpu: 1
    memory: 3
    environment:
      TASK_TYPE: CREATE/RUN_JOB

  - type: run_job
    entity_label: train_model
    short_summary: Running model training job.
    long_summary: >-
      Running the job to train a model.

  - type: start_application
    name: Application to serve Deep Learning for Anomaly Detectionn UI
    short_summary: Create an application to serve the Anomaly Detection UI.
    long_summary: Create an application to serve the Anomaly Detection UI.
    subdomain: deepad
    script: app/backend/app.py
    environment_variables:
      TASK_TYPE: START_APPLICATION
